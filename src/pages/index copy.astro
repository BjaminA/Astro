<!-- Astro_CDN/src/pages/index.astro -->
---
import BaseLayout from '../layouts/BaseLayout.astro';
---
<BaseLayout title="Home - Your App">
  <!-- Main Content -->
  <div class="card">
    <h1 class="card-title">Welcome to Your App</h1>
    <p class="card-text">
      Explore our comprehensive financial charts and gain valuable insights into your data.
    </p>

    <!-- Search Bar Section -->
    <div class="search-container">
      <label for="company-query" class="search-label">Company Query</label>
      <input
        type="text"
        id="company-query"
        name="company-query"
        class="search-input"
        placeholder="Enter company name and press Enter..."
        autocomplete="off"
      />

      <!-- Results Dropdown -->
      <div id="search-results" class="mt-2 bg-white dark:bg-gray-700 rounded-md shadow-lg max-h-60 overflow-y-auto hidden">
        <!-- Dynamic search results will appear here -->
      </div>
    </div>

    <!-- Button to Navigate to Financial Chart -->
    <div class="flex justify-center mt-6">
      <a href="/financialChart" class="card-button">
        View Financial Chart
      </a>
    </div>
  </div>

  <!-- Client-side Script -->
  <script type="module">
    // Handle search input on pressing "Enter"
    async function handleSearch(event) {
      if (event.key === 'Enter') { // Only trigger search on "Enter" key
        const query = event.target.value.trim();
        const resultsContainer = document.getElementById('search-results');

        // Log the query before sending the request to debug
        console.log("Query being sent:", query);

        if (query.length === 0) {
          resultsContainer.innerHTML = '';
          resultsContainer.classList.add('hidden');
          return;
        }

        // Show loading indicator
        resultsContainer.innerHTML = `
          <div class="flex items-center p-2">
            <svg class="animate-spin h-5 w-5 mr-3 text-gray-500 dark:text-gray-200" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z"></path>
            </svg>
            <p class="text-gray-500 dark:text-gray-200">Loading...</p>
          </div>
        `;
        resultsContainer.classList.remove('hidden');

        try {
          // Send the query to the API endpoint
          console.log(`Sending request to /api/searchCompanies?q=${encodeURIComponent(query)}`);
          const response = await fetch(`/api/searchCompanies?q=${encodeURIComponent(query)}`);

          // Check if the response is of the expected content type
          const contentType = response.headers.get('content-type');
          if (!contentType || !contentType.includes('application/json')) {
            const textResponse = await response.text();
            console.error('Unexpected response format:', textResponse);
            resultsContainer.innerHTML = '<p class="p-2 text-red-500 dark:text-red-300">Unexpected response format. Please check the console for details.</p>';
            return;
          }

          const companies = await response.json();

          if (companies.error) {
            resultsContainer.innerHTML = `<p class="p-2 text-red-500 dark:text-red-300">${companies.error}</p>`;
            return;
          }

          if (companies.length === 0) {
            resultsContainer.innerHTML = '<p class="p-2 text-gray-500 dark:text-gray-200">No companies found.</p>';
            return;
          }

          // Populate results
          const resultsHTML = companies
            .map(
              (company) => `
                <div class="p-2 hover:bg-gray-100 dark:hover:bg-gray-600 cursor-pointer" onclick="selectCompany('${company.company_number}', '${company.title}')">
                  <p class="text-gray-800 dark:text-gray-200">${company.title} (${company.company_number})</p>
                </div>
              `
            )
            .join('');

          resultsContainer.innerHTML = resultsHTML;
        } catch (error) {
          console.error('Error fetching companies:', error);
          resultsContainer.innerHTML = '<p class="p-2 text-red-500 dark:text-red-300">An error occurred while fetching data.</p>';
        }
      }
    }

    // Attach handler to input (key press listener)
    document.getElementById('company-query').addEventListener('keypress', handleSearch); // Trigger on "Enter" key press

    // Handle company selection
    function selectCompany(companyNumber, companyTitle) {
      // Redirect to the Financial Chart page with the selected company number as a query parameter
      window.location.href = `/financialChart?company=${encodeURIComponent(companyNumber)}`;
    }

    // Close the results dropdown when clicking outside
    document.addEventListener('click', function(event) {
      const resultsContainer = document.getElementById('search-results');
      const searchInput = document.getElementById('company-query');
      if (!searchInput.contains(event.target) && !resultsContainer.contains(event.target)) {
        resultsContainer.classList.add('hidden');
      }
    });
  </script>
</BaseLayout>
